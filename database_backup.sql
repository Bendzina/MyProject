--
-- PostgreSQL database dump
--

-- Dumped from database version 16.4
-- Dumped by pg_dump version 16.6 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO postgres;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO postgres;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO postgres;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_books; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_books (
    id bigint NOT NULL,
    title character varying(200) NOT NULL,
    author character varying(100) NOT NULL,
    published_date date NOT NULL,
    description text NOT NULL,
    price numeric(10,2) NOT NULL,
    cover_image character varying(100) NOT NULL,
    category_id bigint NOT NULL,
    stock integer NOT NULL,
    CONSTRAINT books_books_stock_check CHECK ((stock >= 0))
);


ALTER TABLE public.books_books OWNER TO postgres;

--
-- Name: books_books_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_books ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_books_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_category (
    id bigint NOT NULL,
    name character varying(100) NOT NULL,
    description text NOT NULL
);


ALTER TABLE public.books_category OWNER TO postgres;

--
-- Name: books_category_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_category ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: orders_cart; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.orders_cart (
    id bigint NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.orders_cart OWNER TO postgres;

--
-- Name: orders_cart_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.orders_cart ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.orders_cart_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: orders_cartitem; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.orders_cartitem (
    id bigint NOT NULL,
    quantity integer NOT NULL,
    cart_id bigint NOT NULL,
    product_id bigint NOT NULL,
    CONSTRAINT orders_cartitem_quantity_check CHECK ((quantity >= 0))
);


ALTER TABLE public.orders_cartitem OWNER TO postgres;

--
-- Name: orders_cartitem_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.orders_cartitem ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.orders_cartitem_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add category	7	add_category
26	Can change category	7	change_category
27	Can delete category	7	delete_category
28	Can view category	7	view_category
29	Can add books	8	add_books
30	Can change books	8	change_books
31	Can delete books	8	delete_books
32	Can view books	8	view_books
33	Can add cart item	9	add_cartitem
34	Can change cart item	9	change_cartitem
35	Can delete cart item	9	delete_cartitem
36	Can view cart item	9	view_cartitem
37	Can add cart	10	add_cart
38	Can change cart	10	change_cart
39	Can delete cart	10	delete_cart
40	Can view cart	10	view_cart
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
2	pbkdf2_sha256$870000$kD8yelDyAorld0O9Y61NAa$aOiCQ4k9rrF8pfM59kdVnDzjHQ4HTjfeiSZJ9Cy0zxQ=	2024-12-22 15:01:19.379947+04	f	benz			bendzina91@gmail.com	f	t	2024-12-16 20:27:48.961808+04
1	pbkdf2_sha256$870000$gKy4fjWc7L8XYvP0UpTovZ$fVtwyjy8GjqAYbZttkhvK0Nl26ihnEfEXoCfRnoV49I=	2024-12-22 15:49:07.418849+04	t	admin				t	t	2024-11-21 15:25:38.490557+04
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: books_books; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_books (id, title, author, published_date, description, price, cover_image, category_id, stock) FROM stdin;
2	All I Want Is You	Falon Ballard	2023-09-23	Jessica Carrington always wanted her own happily ever after. But, until that happens, she spends her days as a small-time romance writer, penning satisfying Happily Ever Afters to soothe the heartache left by her ex-boyfriend Nick Matthews, a fellow romance writer and now her biggest rival, who has found success writing love stories without happy endings. It's clearly what he's good at, after all . . .\r\n\r\nSo, when their professional obligations find them snowed in - and forced to share a room! - at the same remote inn a few days before Christmas, Jess and Nick are both fuming. But what's more fitting for two romantic writers in a slump? And when they realise the friction between them might be the only cure for their writer's block, they decide to turn their frustration into fiction . . . and the pages start flying.\r\n\r\nJess can't shake the feeling that Nick is the last guy on earth she should be falling for (again), but, as they both finally get back in their flow, is he actually all she wants for Christmas?	20.00	book_covers/204316922.jpg	2	2
1	Perfect Fit	Clare Gilmore	2024-11-05	Josephine Davis has spent her entire twenties building Revenant: a fashion brand headquartered in downtown Austin. When her biggest investor orders Josie to hire a consultant, the last person she expects to be working with is Will Grant – the twin brother of Josie’s ex best friend.\r\n\r\nSure, Will and Josie may have shared one mistake of a kiss during senior spring break nine years ago, but they’ve never been friends. She remembers him as moody; he always thought of her as shallow. Romance isn’t on the table for either of them until they blink, and realize there’s a reason they can’t stay away from each other.\r\n\r\nBut there’s Will’s sister to consider – whom Josie hasn’t spoken with since their falling out – not to mention, Will and Josie live seventeen hundred miles apart. And it’s not like she has time for a boyfriend anyway when she’s an overworked CEO. As Josie’s burnout looms while she falls deeper and harder for Will, she contends with the fact that eventually, she’ll have to make a choice: stay alone to be productive, or slow down to be in love.	20.00	book_covers/203578971.jpg	1	2
4	Servant of Earth	Sarah Hawley	2024-11-05	Kenna Heron is best known in her village for being a little wild—some say “half feral”—but she’ll need every ounce of that ferocity to survive captivity in the cruel Fae court.\r\n\r\nTrapped as a servant in the faeries’ underground kingdom of Mistei, Kenna must help her new mistress undertake six deadly trials, one for each branch of magic: Fire, Earth, Light, Void, Illusion, and Blood. If she succeeds, her mistress will gain immortality and become the heir to Earth House. If she doesn’t, the punishment is death—for both mistress and servant.\r\n\r\nWith no ally but a sentient dagger of mysterious origins, Kenna must face monsters, magic, and grueling physical tests. But worse dangers wait underground, and soon Kenna gets caught up in a secret rebellion against the inventively sadistic faerie king. When her feelings for the rebellion’s leader turn passionate, Kenna must decide if she’s willing to risk her life for a better world and a chance at happiness.\r\n\r\nSurviving the trials and overthrowing a tyrant king will take cunning, courage, and an iron will... but even that may not be enough.	20.00	book_covers/208930983.jpg	3	0
5	A Fire in the Sky	Sophie Jordan	2020-09-11	Dragon fire no longer blisters the skies over Penterra, but inside the lavish palace, life is still perilous…especially for Tamsyn. Raised in the glittering court alongside the princesses, it's her duty to be punished for their misdeeds. Treated as part of the royal family but also as the lowliest servant, Tamsyn fits nowhere. Her only friend is Stig, Captain of the Guard...though sometimes she thinks he wants more than friendship.\r\n\r\nWhen Fell, the Beast of the Borderlands, descends on her home, Tamsyn’s world becomes even more dangerous. To save the pampered princesses from a fate worse than death, she is commanded to don a veil and marry the brutal warrior. She agrees to the deception even though it means leaving Stig, and the only life she’s ever known, behind.\r\n\r\nThe wedding night begins with unexpected passion—and ends in near violence when her trickery is exposed. Rather than start a war, Fell accepts Tamsyn as his bride...but can he accept the dark secrets she harbors—secrets buried so deep even she doesn’t know they exist? For Tamsyn is more than a royal whipping girl, more than the false wife of a man who now sees her as his enemy. And when those secrets emerge, they will ignite a flame bright enough to burn the entire kingdom to the bone.\r\n\r\nMagic is not dead...it is only sleeping. And it will take one ordinary girl with an extraordinary destiny to awaken it.	15.00	book_covers/205822553.jpg.png	1	0
6	Fear the Flames	Olivia Rose Darling	2019-09-09	Princess. Prisoner. Runaway. Queen.\r\nElowen Atarah, Princess of Imirath, came into the world like a firestorm made flesh. A princess with a link to five dragons should have been a blessing to her kingdom, but her blessing became her curse. The little girl in shackles became a knife wielding woman with a thirst for retaliation.\r\nNow, Queen of Aestilian, a secret kingdom she forged through strength and survival, Elowen needs a way to feed her rising population. She never thought she would have the force to take on Imirath, but when the snarky Commander Cayden Veles of Vareveth, her father’s enemy kingdom, offers her a deal she’s been dreaming of for years, how can she not take it? Even if he ignites her temper like no other, nothing unites two begrudging allies more than a common enemy.\r\nThe pair of them, along with three accomplices, will navigate their partnership, politics, and attempt to pull off the greatest heist their world has ever known. Five people, all united through revenge, will have to transcend the odds stacked against them and infiltrate the impenetrable castle if they want to reap their rewards before someone reaps their souls. Putting aside their differences to accomplish a common goal because everyone knows…vengeance is a promise signed in blood.	15.00	book_covers/63057844.jpg	3	0
7	Quicksilver	Callie Hart	2018-11-09	Twenty-four-year-old Saeris Fane is good at keeping secrets. No one knows about the strange powers she possesses, or the fact that she has been picking pockets and stealing from the Undying Queen’s reservoirs for as long as she can remember.\r\n\r\nBut a secret is like a knot.\r\n\r\nSooner or later, it is bound to come undone.\r\n\r\nWhen Saeris comes face-to-face with Death himself, she inadvertently reopens a gateway between realms and is transported to a land of ice and snow. The Fae have always been the stuff of myth, of legend, of nightmares…but it turns out they’re real, and Saeris has landed herself right in the middle of a centuries-long conflict that might just get her killed.\r\n\r\nThe first of her kind to tread the frozen mountains of Yvelia in over a thousand years, Saeris mistakenly binds herself to Kingfisher, a handsome Fae warrior, who has secrets and nefarious agendas of his own. He will use her Alchemist’s magic to protect his people, no matter what it costs him… or her.\r\n\r\nDeath has a name.\r\n\r\nIt is Kingfisher of the Ajun Gate.\r\n\r\nHis past is murky.\r\n\r\nHis attitude stinks.\r\n\r\nAnd he’s the only way Saeris is going to make it home.	20.00	book_covers/217536270.jpg	2	0
8	The Hunted Heir	Holly Renee	2020-09-11	From USA Today Bestselling Author Holly Renee, comes the second book in the scorching romantasy series with enthralling secrets, impassioned enemies, and luring tension.\r\n\r\nVerena was the lost princess of Marmoris, the very thing we had spent our entire lives looking for, and I had let her go.\r\n\r\nThe lingering taste of her mixed with the deep ache in my chest over her betrayal haunted my days and nights. I knew she was hiding something, but her secrets were far more treacherous than I could have imagined.\r\n\r\nThough I wished my own betrayal hadn’t been so bitter on my tongue.\r\n\r\nNow my dreams are haunted with the way her deep blue eyes looked up at me in shock when I revealed I knew her truth.\r\n\r\nThe way I crave for her to look at me now as I hunt for her.\r\n\r\nMe, along with half of the rebellion.\r\n\r\nIf my father finds her before me, there is no telling what he will do to her.\r\n\r\nAnd even though she’s the little traitor I’d always thought she was, I couldn’t allow him to find her.\r\n\r\nBut his orders were clear. The princess is to be taken by the rebellion or she would be taken by the gods. I don’t know which is worse.\r\n\r\nShe is the heir to our kingdom, the daughter of the cruel king who was responsible for my mother’s death, and the key to winning our rebellion.	12.00	book_covers/209522179.jpg	2	0
9	sdds	sd	2019-09-09	sd	15.00	book_covers/209522179_ROu45nd.jpg	1	0
10	uhu	jbjh	2019-01-01	hgjhg	15.00	book_covers/112972173_TvFBNoq.jpg	3	0
\.


--
-- Data for Name: books_category; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_category (id, name, description) FROM stdin;
1	Mystic	weds
2	Romance	weds
3	Fantasy	webs
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2024-11-21 15:29:12.556539+04	1	Mystic	1	[{"added": {}}]	7	1
2	2024-11-21 15:29:27.496108+04	1	Perfect Fit	1	[{"added": {}}]	8	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	books	category
8	books	books
9	orders	cartitem
10	orders	cart
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2024-11-21 15:19:24.559237+04
2	auth	0001_initial	2024-11-21 15:19:24.617587+04
3	admin	0001_initial	2024-11-21 15:19:24.63377+04
4	admin	0002_logentry_remove_auto_add	2024-11-21 15:19:24.645116+04
5	admin	0003_logentry_add_action_flag_choices	2024-11-21 15:19:24.648289+04
6	contenttypes	0002_remove_content_type_name	2024-11-21 15:19:24.655499+04
7	auth	0002_alter_permission_name_max_length	2024-11-21 15:19:24.659145+04
8	auth	0003_alter_user_email_max_length	2024-11-21 15:19:24.662226+04
9	auth	0004_alter_user_username_opts	2024-11-21 15:19:24.664935+04
10	auth	0005_alter_user_last_login_null	2024-11-21 15:19:24.668156+04
11	auth	0006_require_contenttypes_0002	2024-11-21 15:19:24.668621+04
12	auth	0007_alter_validators_add_error_messages	2024-11-21 15:19:24.672213+04
13	auth	0008_alter_user_username_max_length	2024-11-21 15:19:24.679971+04
14	auth	0009_alter_user_last_name_max_length	2024-11-21 15:19:24.683307+04
15	auth	0010_alter_group_name_max_length	2024-11-21 15:19:24.687891+04
16	auth	0011_update_proxy_permissions	2024-11-21 15:19:24.690482+04
17	auth	0012_alter_user_first_name_max_length	2024-11-21 15:19:24.694501+04
18	sessions	0001_initial	2024-11-21 15:19:24.7012+04
19	books	0001_initial	2024-11-21 15:21:16.674602+04
20	orders	0001_initial	2024-11-27 14:33:04.47588+04
21	books	0002_books_stock	2024-11-28 23:18:51.11394+04
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
gjbunvartemivzu4z42bsqhh1tw2ntml	.eJxVjEsOwiAUAO_C2hD-FJfuewbCezykamhS2pXx7oakC93OTObNYjr2Go9OW1wyuzLJLr8MEj6pDZEfqd1XjmvbtwX4SPhpO5_XTK_b2f4Naup1bCmohERANsHki9KlaCFAUJAKrXEZjXdGewXauqCmLNFoQBuEJ28y-3wB9xc30Q:1tE5KD:WyUB_cB2j8IY-_nA5I8VVZzr-EopRqFJz931fhmUuM0	2024-12-05 15:26:17.901865+04
6esb0p2po5owcp6mgi2ahj7oo4ysnf1f	.eJxVjEsOwiAUAO_C2hD-FJfuewbCezykamhS2pXx7oakC93OTObNYjr2Go9OW1wyuzLJLr8MEj6pDZEfqd1XjmvbtwX4SPhpO5_XTK_b2f4Naup1bCmohERANsHki9KlaCFAUJAKrXEZjXdGewXauqCmLNFoQBuEJ28y-3wB9xc30Q:1tPKSJ:Me6uVAcmFa_FrEhX1Eh97ghaNBNxLpLHhpk8Yf0FSok	2025-01-05 15:49:07.424155+04
\.


--
-- Data for Name: orders_cart; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.orders_cart (id, created_at, updated_at, user_id) FROM stdin;
1	2024-11-29 11:06:54.272815+04	2024-11-29 11:06:54.272837+04	1
\.


--
-- Data for Name: orders_cartitem; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.orders_cartitem (id, quantity, cart_id, product_id) FROM stdin;
8	2	1	1
9	1	1	2
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 40, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 2, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: books_books_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_books_id_seq', 10, true);


--
-- Name: books_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_category_id_seq', 3, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 2, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 10, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 21, true);


--
-- Name: orders_cart_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.orders_cart_id_seq', 1, true);


--
-- Name: orders_cartitem_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.orders_cartitem_id_seq', 9, true);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: books_books books_books_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_books
    ADD CONSTRAINT books_books_pkey PRIMARY KEY (id);


--
-- Name: books_category books_category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_category
    ADD CONSTRAINT books_category_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: orders_cart orders_cart_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders_cart
    ADD CONSTRAINT orders_cart_pkey PRIMARY KEY (id);


--
-- Name: orders_cartitem orders_cartitem_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders_cartitem
    ADD CONSTRAINT orders_cartitem_pkey PRIMARY KEY (id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: books_books_category_id_dab8e54b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_books_category_id_dab8e54b ON public.books_books USING btree (category_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: orders_cart_user_id_121a069e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX orders_cart_user_id_121a069e ON public.orders_cart USING btree (user_id);


--
-- Name: orders_cartitem_cart_id_529df5fa; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX orders_cartitem_cart_id_529df5fa ON public.orders_cartitem USING btree (cart_id);


--
-- Name: orders_cartitem_product_id_55063ee7; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX orders_cartitem_product_id_55063ee7 ON public.orders_cartitem USING btree (product_id);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_books books_books_category_id_dab8e54b_fk_books_category_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_books
    ADD CONSTRAINT books_books_category_id_dab8e54b_fk_books_category_id FOREIGN KEY (category_id) REFERENCES public.books_category(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: orders_cart orders_cart_user_id_121a069e_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders_cart
    ADD CONSTRAINT orders_cart_user_id_121a069e_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: orders_cartitem orders_cartitem_cart_id_529df5fa_fk_orders_cart_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders_cartitem
    ADD CONSTRAINT orders_cartitem_cart_id_529df5fa_fk_orders_cart_id FOREIGN KEY (cart_id) REFERENCES public.orders_cart(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: orders_cartitem orders_cartitem_product_id_55063ee7_fk_books_books_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders_cartitem
    ADD CONSTRAINT orders_cartitem_product_id_55063ee7_fk_books_books_id FOREIGN KEY (product_id) REFERENCES public.books_books(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

